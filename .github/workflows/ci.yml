name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run linter
        run: bun run lint

      - name: Run type checking
        run: bun run typecheck

      - name: Run tests
        run: bun test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build action
        run: bun run build

      - name: Check dist is up to date
        run: |
          if [ -n "$(git status --porcelain dist/)" ]; then
            echo "::error::dist/ is not up to date. Run 'bun run build' and commit the changes."
            git status --porcelain dist/
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Get Next Version
        id: version
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit built files to release tag
        run: |
          git add dist/
          if ! git diff --staged --quiet; then
            git commit -m "chore: update built files for release ${{ steps.version.outputs.next }}"
            git tag -f ${{ steps.version.outputs.next }}
            git push origin ${{ steps.version.outputs.next }} --force
          fi

      - name: Create major version tag
        run: |
          TAG=${{ steps.version.outputs.next }}
          MAJOR_VERSION=${TAG%%.*}
          git tag -f $MAJOR_VERSION
          git push origin $MAJOR_VERSION --force

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.next }}
          name: Release ${{ steps.version.outputs.next }}
          body: |
            Automated release of Notion to GitHub Wiki Sync Action

            Built from commit: ${{ github.sha }}

            ## Installation
            ```yaml
            uses: RageLtd/notion-to-github-action@${{ steps.version.outputs.next }}
            # or use major version for automatic updates
            uses: RageLtd/notion-to-github-action@${{ steps.version.outputs.nextMajor }}
            ```
          files: |
            dist/index.js
            action.yml
            README.md
          generate_release_notes: true
          make_latest: true
